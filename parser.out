Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VARIABLE

Grammar

Rule 0     S' -> hash
Rule 1     hash -> IDENTIFIER EQUAL LBRACE key_value_pairs RBRACE
Rule 2     key_value_pairs -> key_value_pairs COMMA key_value_pair
Rule 3     key_value_pairs -> key_value_pair
Rule 4     key_value_pairs -> empty
Rule 5     key_value_pair -> IDENTIFIER COLON VALUE
Rule 6     key_value_pair -> empty
Rule 7     empty -> <empty>

Terminals, with rules where they appear

COLON                : 5
COMMA                : 2
EQUAL                : 1
IDENTIFIER           : 1 5
LBRACE               : 1
RBRACE               : 1
VALUE                : 5
VARIABLE             : 
error                : 

Nonterminals, with rules where they appear

empty                : 4 6
hash                 : 0
key_value_pair       : 2 3
key_value_pairs      : 1 2

Parsing method: LALR

state 0

    (0) S' -> . hash
    (1) hash -> . IDENTIFIER EQUAL LBRACE key_value_pairs RBRACE

    IDENTIFIER      shift and go to state 2

    hash                           shift and go to state 1

state 1

    (0) S' -> hash .



state 2

    (1) hash -> IDENTIFIER . EQUAL LBRACE key_value_pairs RBRACE

    EQUAL           shift and go to state 3


state 3

    (1) hash -> IDENTIFIER EQUAL . LBRACE key_value_pairs RBRACE

    LBRACE          shift and go to state 4


state 4

    (1) hash -> IDENTIFIER EQUAL LBRACE . key_value_pairs RBRACE
    (2) key_value_pairs -> . key_value_pairs COMMA key_value_pair
    (3) key_value_pairs -> . key_value_pair
    (4) key_value_pairs -> . empty
    (5) key_value_pair -> . IDENTIFIER COLON VALUE
    (6) key_value_pair -> . empty
    (7) empty -> .

    IDENTIFIER      shift and go to state 5
    RBRACE          reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)

    key_value_pairs                shift and go to state 6
    key_value_pair                 shift and go to state 7
    empty                          shift and go to state 8

state 5

    (5) key_value_pair -> IDENTIFIER . COLON VALUE

    COLON           shift and go to state 9


state 6

    (1) hash -> IDENTIFIER EQUAL LBRACE key_value_pairs . RBRACE
    (2) key_value_pairs -> key_value_pairs . COMMA key_value_pair

    RBRACE          shift and go to state 10
    COMMA           shift and go to state 11


state 7

    (3) key_value_pairs -> key_value_pair .

    RBRACE          reduce using rule 3 (key_value_pairs -> key_value_pair .)
    COMMA           reduce using rule 3 (key_value_pairs -> key_value_pair .)


state 8

    (4) key_value_pairs -> empty .
    (6) key_value_pair -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 4 (key_value_pairs -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 4 (key_value_pairs -> empty .)
    RBRACE          reduce using rule 4 (key_value_pairs -> empty .)
    COMMA           reduce using rule 4 (key_value_pairs -> empty .)

  ! RBRACE          [ reduce using rule 6 (key_value_pair -> empty .) ]
  ! COMMA           [ reduce using rule 6 (key_value_pair -> empty .) ]


state 9

    (5) key_value_pair -> IDENTIFIER COLON . VALUE

    VALUE           shift and go to state 12


state 10

    (1) hash -> IDENTIFIER EQUAL LBRACE key_value_pairs RBRACE .

    $end            reduce using rule 1 (hash -> IDENTIFIER EQUAL LBRACE key_value_pairs RBRACE .)


state 11

    (2) key_value_pairs -> key_value_pairs COMMA . key_value_pair
    (5) key_value_pair -> . IDENTIFIER COLON VALUE
    (6) key_value_pair -> . empty
    (7) empty -> .

    IDENTIFIER      shift and go to state 5
    RBRACE          reduce using rule 7 (empty -> .)
    COMMA           reduce using rule 7 (empty -> .)

    key_value_pair                 shift and go to state 13
    empty                          shift and go to state 14

state 12

    (5) key_value_pair -> IDENTIFIER COLON VALUE .

    RBRACE          reduce using rule 5 (key_value_pair -> IDENTIFIER COLON VALUE .)
    COMMA           reduce using rule 5 (key_value_pair -> IDENTIFIER COLON VALUE .)


state 13

    (2) key_value_pairs -> key_value_pairs COMMA key_value_pair .

    RBRACE          reduce using rule 2 (key_value_pairs -> key_value_pairs COMMA key_value_pair .)
    COMMA           reduce using rule 2 (key_value_pairs -> key_value_pairs COMMA key_value_pair .)


state 14

    (6) key_value_pair -> empty .

    RBRACE          reduce using rule 6 (key_value_pair -> empty .)
    COMMA           reduce using rule 6 (key_value_pair -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 8 resolved using rule (key_value_pairs -> empty)
WARNING: rejected rule (key_value_pair -> empty) in state 8
